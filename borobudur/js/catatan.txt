$("#kategori").select2("trigger", "select", {
    data: { id: data.info.jenis_observasi }
});

 window.axios.defaults.headers.common = {
            'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
            'X-Requested-With': 'XMLHttpRequest',
            'authorization' : 'Bearer g6prnfghJPGgvbUHKypuQjcVIqanVIskiT4ZkL1p'
         };

 $x = array();
        for($i = 0; $i < count($model); $i++){
            if($model[$i]->bulan == $model1[$i]->bulan)
                $model[$i]->child = $model1[$i]->totalv;
                
        }


        <template>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">Example Component</div>

                    <div class="card-body">
                        <select>
                            <option>Hello</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>
</template>
<script>
import { Bar } from 'vue-chartjs';

export default {
    extends: Bar,
    
    mounted() {
         let uri = 'http://127.0.0.1:8000/monev_batu/data/chart';
         let Years = new Array();
         let Labels = new Array();
         let Total = new Array();
         this.axios.get(uri).then((response) => {
            let data = response.data;
            if(data) {
                data.forEach(element => {
                Years.push(element.tahun);
                Labels.push(element.jenis_observasi);
                Total.push(element.total);
                });
                this.renderChart({
                    labels: Years,
                    datasets: [{
                        label: Labels[0],
                        backgroundColor: '#3b5998',
                        data: Total
                    }]
                }, {responsive: true, maintainAspectRatio: false})
         }
         else {
            console.log('No data');
         }
         });            
      }
   }
</script>


<template>
  <div>
    <line-chart :chart-data="datacollection"></line-chart>
    <button @click="fillData()">Randomize</button>
  </div>
</template>

<script>
  import LineChart from './LineChart.js'

export default {
    components: {
      LineChart
    },
    data () {
      return {
        datacollection: null
      }
    },
    mounted () {
      this.fillData()
    },
    methods: {
        fillData () {
            let uri = 'http://127.0.0.1:8000/monev_batu/data/chart';
            let Years = new Array();
            let Labels = new Array();
            let Total = new Array();
            this.axios.get(uri).then((response) => {
                let data = response.data;
                if(data) {
                    data.forEach(element => {
                        Years.push(element.tahun);
                        Labels.push(element.jenis_observasi);
                        Total.push(element.total);
                    });
               
                    this.datacollection = {
                        labels: Years,
                        datasets: [{
                            label: Labels[0],
                            backgroundColor: '#3b5998',
                            data: Total
                        }]
                    }
                }
            })
        }
    }
}

</script>

<style>
  .small {
    max-width: 600px;
    margin:  150px auto;
  }
</style>